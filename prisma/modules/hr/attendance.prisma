// ============================================================================
// HR ATTENDANCE & TIME-OFF
// ============================================================================

model TimeOffRequest {
  id                 String   @id @default(uuid())
  businessId         String
  business           Business @relation("BusinessTimeOffRequests", fields: [businessId], references: [id], onDelete: Cascade)

  employeePositionId String
  employeePosition   EmployeePosition @relation("EmployeePositionTimeOffRequests", fields: [employeePositionId], references: [id], onDelete: Cascade)

  type               TimeOffType
  startDate          DateTime
  endDate            DateTime
  reason             String?

  status             TimeOffStatus @default(PENDING)
  requestedById      String
  requestedAt        DateTime @default(now())
  approvedById       String?
  approvedAt         DateTime?
  managerNote        String?

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([businessId])
  @@index([employeePositionId])
  @@index([status])
  @@map("time_off_requests")
}

enum TimeOffType {
  PTO
  SICK
  PERSONAL
  UNPAID
}

enum TimeOffStatus {
  PENDING
  APPROVED
  DENIED
  CANCELED
}


