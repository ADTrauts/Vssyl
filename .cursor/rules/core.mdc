## Core Rules

You have two modes of operation:

1. Plan mode - You will work with the user to define a plan, you will gather all the information you need to make the changes but will not make any changes
2. Act mode - You will make changes to the codebase based on the plan

- You start in plan mode and will not move to act mode until the plan is approved by the user.
- You will print `# Mode: PLAN` when in plan mode and `# Mode: ACT` when in act mode at the beginning of each response.
- Unless the user explicity asks you to move to act mode, by typing `ACT` you will stay in plan mode.
- You will move back to plan mode after every response and when the user types `PLAN`.
- If the user asks you to take an action while in plan mode you will remind them that you are in plan mode and that they need to approve the plan first.
- When in plan mode always output the full updated plan in every response.

## Business Workspace Architecture Intelligence

### **Current Focus: Business Workspace & Work Tab Synchronization**
- **Problem**: Business admin and employee views are not synchronized
- **Solution**: Real-time business configuration synchronization via WebSockets
- **Architecture**: Shared BusinessConfigurationContext with instant updates

### **Key Technical Decisions Made**
1. **Caching Strategy**: Hybrid approach (Option C) - critical data real-time, non-critical cached
2. **WebSocket Implementation**: Extend existing chat infrastructure, don't create new service
3. **Module Installation**: Use existing API, extend for business scope
4. **Permission System**: Role-based (Admin/Manager/Employee) with future org chart expansion

### **Business Context Architecture**
- **Business Creation** → **Business Profile Page** (setup) → **Business Workspace** (daily work)
- **Work Tab** → Shows affiliated businesses → **Business Workspace** (job-specific tools)
- **Business Profile Page**: Business setup, branding, module selection, admin functions
- **Business Workspace**: Daily work tools, module access, employee workspace

### **Synchronization Requirements**
- **Real-time updates**: Business changes reflect instantly in work tab
- **Module consistency**: Employees only see business-enabled modules
- **No page refresh**: Instant synchronization between contexts
- **Single source of truth**: Business configuration context

### **Implementation Phases**
1. **Phase 1**: Business Configuration Context & WebSockets (current focus)
2. **Phase 2**: Business Module Management (leverage existing marketplace)
3. **Phase 3**: Permission System Foundation (basic role-based access)
4. **Phase 4**: Org Chart & Advanced Permissions (departments, custom roles)

### **Key Files to Modify**
- **Frontend**: BusinessConfigurationContext (NEW), BrandedWorkDashboard, Business Workspace
- **Backend**: Extend chatSocketService, business routes, module routes
- **Database**: Business module installations and permissions schema

### **User Preferences**
- **End users cannot easily change their Block ID** (admin-only)
- **Work on entire set of tasks at once** (don't stop between actions)
- **Consistent global font and matching icons** (prefer Drive module icons)
- **Run both Next.js frontend and Express backend** with `pnpm dev` from root
- You will print `# Mode: PLAN` when in plan mode and `# Mode: ACT` when in act mode at the beginning of each response.
- Unless the user explicity asks you to move to act mode, by typing `ACT` you will stay in plan mode.
- You will move back to plan mode after every response and when the user types `PLAN`.
- If the user asks you to take an action while in plan mode you will remind them that you are in plan mode and that they need to approve the plan first.
- When in plan mode always output the full updated plan in every response.